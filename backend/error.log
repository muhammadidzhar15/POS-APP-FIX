{"level":"error","message":"controller/user.controller.js:createUser - \nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    name: \"idzhar\",\n    userName: \"code\",\n    password: \"$2b$10$n9xYByeb1mbPtA.uHEY2eeJbONHZnX1wYAYP5GhoYAvmfqL7SEOV.\",\n    role: \"admin\",\n+   username: String\n  }\n}\n\nArgument `username` is missing."}
{"level":"error","message":"controller/user.controller.js:createUser - \nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    name: \"idzhar\",\n    userName: \"ijar15\",\n    password: \"$2b$10$eL0UUnXLPY8iWFjWa5UtD.7Ewg7YjQ0i5NH4Km6SQfCrINlwVoFAq\",\n    role: \"admin\",\n+   username: String\n  }\n}\n\nArgument `username` is missing."}
{"level":"error","message":"controllers/user.controller.js:loginUser - \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    userName: \"idzhar\",\n    ~~~~~~~~\n?   id?: Int,\n?   username?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   role?: StringFilter | String,\n?   Carts?: CartsListRelationFilter,\n?   Orders?: OrdersListRelationFilter,\n?   Orderreturn?: OrderreturnListRelationFilter,\n?   Purchase?: PurchaseListRelationFilter\n  }\n}\n\nUnknown argument `userName`. Did you mean `username`? Available options are marked with ?."}
{"level":"error","message":"controllers/user.controller.js:loginUser - \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    userName: \"idzhar\",\n    ~~~~~~~~\n?   id?: Int,\n?   username?: String,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   role?: StringFilter | String,\n?   Carts?: CartsListRelationFilter,\n?   Orders?: OrdersListRelationFilter,\n?   Orderreturn?: OrderreturnListRelationFilter,\n?   Purchase?: PurchaseListRelationFilter\n  }\n}\n\nUnknown argument `userName`. Did you mean `username`? Available options are marked with ?."}
{"level":"error","message":"controller/user.controller.js:createUser - \nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the constraint: `User_username_key`"}
{"level":"error","message":"controller/user.controller.js:createUser - \nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the constraint: `User_username_key`"}
{"level":"error","message":"controller/user.controller.js:UpdateUser - \nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n    id: 6\n  },\n  data: {\n    name: \"ijar\",\n    userName: \"ijarganteng\",\n    ~~~~~~~~\n    password: \"$2b$10$rqRUE.0vbvBLzDsiXQUd8upNfPmIPJowniJ9P3C8La9wO4NCtmhxi\",\n    role: \"admin\",\n?   username?: String | StringFieldUpdateOperationsInput,\n?   Carts?: CartsUpdateManyWithoutUserNestedInput,\n?   Orders?: OrdersUpdateManyWithoutUserNestedInput,\n?   Orderreturn?: OrderreturnUpdateManyWithoutUserNestedInput,\n?   Purchase?: PurchaseUpdateManyWithoutUserNestedInput\n  }\n}\n\nUnknown argument `userName`. Did you mean `username`? Available options are marked with ?."}
{"level":"error","message":"controllers/user.controller.js:deletUser - \nInvalid `prisma.user.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"controllers/user.controller.js:deletUser - \nInvalid `prisma.user.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"controllers/user.controller.js:deletUser - \nInvalid `prisma.user.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"controllers / user.controller.js: getUserById - Unexpected token '�', \"���z�S�G�\" is not valid JSON"}
{"level":"error","message":"controllers / user.controller.js: getUserById - Unexpected token '�', \"���z�S�G�\" is not valid JSON"}
{"level":"error","message":"controllers/user.controller.js:loginUser - \nInvalid `prisma.user.findUnique()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`."}
{"level":"error","message":"controller/user.controller.js:createUser - \nInvalid `prisma.user.create()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`."}
{"level":"error","message":"controller/user.controller.js:createUser - \nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the constraint: `User_username_key`"}
{"level":"error","message":"controller/user.controller.js:createUser - \nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the constraint: `User_username_key`"}
{"level":"error","message":"controllers / user.controller.js: getUserById - \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    username: undefined,\n?   id?: Int,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   role?: StringFilter | String,\n?   Carts?: CartsListRelationFilter,\n?   Orders?: OrdersListRelationFilter,\n?   Orderreturn?: OrderreturnListRelationFilter,\n?   Purchase?: PurchaseListRelationFilter\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `username` arguments. Available options are marked with ?."}
{"level":"error","message":"controllers / user.controller.js: getUserById - \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    username: undefined,\n?   id?: Int,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   role?: StringFilter | String,\n?   Carts?: CartsListRelationFilter,\n?   Orders?: OrdersListRelationFilter,\n?   Orderreturn?: OrderreturnListRelationFilter,\n?   Purchase?: PurchaseListRelationFilter\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `username` arguments. Available options are marked with ?."}
{"level":"error","message":"controllers / user.controller.js: setRefreshtoken - Unexpected token '�', \"���z�S�G�\" is not valid JSON"}
{"level":"error","message":"controllers / user.controller.js: setRefreshtoken - \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    username: undefined,\n?   id?: Int,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   role?: StringFilter | String,\n?   Carts?: CartsListRelationFilter,\n?   Orders?: OrdersListRelationFilter,\n?   Orderreturn?: OrderreturnListRelationFilter,\n?   Purchase?: PurchaseListRelationFilter\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `username` arguments. Available options are marked with ?."}
{"level":"error","message":"controllers / user.controller.js: setRefreshToken - \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    username: undefined,\n?   id?: Int,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   role?: StringFilter | String,\n?   Carts?: CartsListRelationFilter,\n?   Orders?: OrdersListRelationFilter,\n?   Orderreturn?: OrderreturnListRelationFilter,\n?   Purchase?: PurchaseListRelationFilter\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `username` arguments. Available options are marked with ?."}
{"level":"error","message":"controllers/user.controller.js:setRefreshToken - Unexpected token '�', \"���z�S�G�\" is not valid JSON"}
{"level":"error","message":"controllers/user.controller.js:setRefreshToken - Unexpected token '�', \"���z�S�G�\" is not valid JSON"}
{"level":"error","message":"controllers/user.controller.js:setRefreshToken - \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    username: undefined,\n?   id?: Int,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   role?: StringFilter | String,\n?   Carts?: CartsListRelationFilter,\n?   Orders?: OrdersListRelationFilter,\n?   Orderreturn?: OrderreturnListRelationFilter,\n?   Purchase?: PurchaseListRelationFilter\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `username` arguments. Available options are marked with ?."}
{"level":"error","message":"controllers/user.controller.js:setRefreshToken - \nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n    username: undefined,\n?   id?: Int,\n?   AND?: UserWhereInput | UserWhereInput[],\n?   OR?: UserWhereInput[],\n?   NOT?: UserWhereInput | UserWhereInput[],\n?   password?: StringFilter | String,\n?   name?: StringFilter | String,\n?   role?: StringFilter | String,\n?   Carts?: CartsListRelationFilter,\n?   Orders?: OrdersListRelationFilter,\n?   Orderreturn?: OrderreturnListRelationFilter,\n?   Purchase?: PurchaseListRelationFilter\n  }\n}\n\nArgument `where` of type UserWhereUniqueInput needs at least one of `id` or `username` arguments. Available options are marked with ?."}
{"level":"error","message":"controllers/user.controller.js:deleteUser - \nInvalid `prisma.user.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"controllers/user.controller.js:deleteUser - \nInvalid `prisma.user.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"controllers/user.controller.js:deleteUser - \nInvalid `prisma.user.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"controllers/user.controller.js:deleteUser - \nInvalid `prisma.user.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"controllers/user.controller.js:deleteUser - \nInvalid `prisma.user.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"controllers/user.controller.js:deleteUser - \nInvalid `prisma.user.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"controllers/user.controller.js:deleteUser - \nInvalid `prisma.user.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"controllers/user.controller.js:deleteUser - \nInvalid `prisma.user.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"controllers/user.controller.js:deleteUser - \nInvalid `prisma.user.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"controllers/user.controller.js:deleteUser - \nInvalid `prisma.user.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"controllers/user.controller.js:deleteUser - \nInvalid `prisma.user.delete()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to delete does not exist."}
{"level":"error","message":"controllers/user.controller.js:loginUser - \nInvalid `prisma.user.findUnique()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`."}
{"level":"error","message":"controllers/user.controller.js:loginUser - \nInvalid `prisma.user.findUnique()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`."}
